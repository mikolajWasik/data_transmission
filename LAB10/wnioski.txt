Wszystkie demotulatory są do siebie bardzo zbliżone. Działają na podobnej zasadzie. Różnią się właściwie jedynie sposobem tworzenia sygnału p(t) na c(t).
Jedynie przy sygnale FSK widać większą różnicę w postaci rozdzielenia się na 2 sygnały x(t). Utrudnia to sprawdzenie czy otrzymaliśmy poprawny wykres c(t).
Mam na myśli to, że przy wykresach sygnałów p(t) dla ASK i PSK można wzrokowo ocenić czy otrzymane z nich wykresy sygnałów c(t) są poprawne, natomiast przy p(t) dla FSK nie jest to tak sprawne z racji na to, że otrzymujemy tam 2 wykresy p(t).
Jednak mimo to - sygnał ASK okazał się bardziej "delikatny" i wrażliwy na zmiany. Chodzi o to, że gdy na początku sprawdzałem poprawność zaimplementowanego przeze mnie mechanizmu zamiany sygnału c(t) na sygnał bitowy ("naprawy" sygnału c(t)) robiłem to dla ciągu bitowego o długości 10 znaków, z których powstały sygnały podstawowe ASK, PSK i FSK.
Próg, po którego przekroczeniu algorytm powinien zmienić 0 na 1 w obrębie zasięgu danego znaku ciągu bitowego wynosił wtedy 50% dla wszystkich 3 sygnałów (jeśli w zasięgu działania konkretnego znaku ciągu bitowego minimum 50% wartości stanowiły 1, to pozostałe wartości, które wynosiły 0 również stają się 1, a w przeciwnym wypadku zamieniamy 1 na 0).
Mechanizm działał poprawnie dla wszystkich trzech sygnałów. Jednak wystarczyła zmiana długości strumienia z 10 do 21 by ten próg był zbyt wysoki dla sygnału ASK i musiałem obniżyć go do 25%, wtedy znowu zacząłem otrzymywać poprawny strumień bitowy.
Biorac te czynniki pod uwagę wydaje mi się, że najlepszym sygnałem jest w takim razie PSK. Jest bardziej odporny na zmianny własności sygnału przy demodulacji niż ASK oraz wymaga mniej pamięci, również przy demodulacji, niż FSK. Ponadto na każdym etapie jego demodulacji gołym okiem widać czy gdzieś nie popełniliśmy jakiegoś większego błędu, jeśli porównamy sobie jego wykresy z poszczególnych etapów demodulacji.